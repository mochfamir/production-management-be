generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  OPERATOR
}

enum WorkOrderStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}

enum ProductionStage {
  MATERIAL_PREPARATION
  CUTTING
  ASSEMBLY
  PAINTING
  QUALITY_CONTROL
  PACKAGING
}

model User {
  id                 String      @id @default(uuid())
  name               String
  email              String      @unique
  password           String
  role               Role
  workOrdersAssigned WorkOrder[] @relation("OperatorWorkOrders")
  workOrdersCreated  WorkOrder[] @relation("CreatorWorkOrders")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkOrder {
  id                String          @id @default(uuid())
  number            String          @unique
  productName       String
  quantity          Int
  status            WorkOrderStatus @default(PENDING)
  assignedTo        User?           @relation("OperatorWorkOrders", fields: [assignedToId], references: [id])
  assignedToId      String?
  createdBy         User            @relation("CreatorWorkOrders", fields: [createdById], references: [id])
  createdById       String
  dueDate           DateTime

  logs WorkOrderLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkOrderLog {
  id              String           @id @default(uuid())
  workOrder       WorkOrder        @relation(fields: [workOrderId], references: [id], onDelete: Cascade)
  workOrderId     String
  status          WorkOrderStatus
  productionStage ProductionStage?

  quantityUpdated Int
  note            String?
  timestamp       DateTime @default(now())
}
